service: import-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-central-1
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    ACCOUNT_ID: 959222269509
  iamRoleStatements:
    - Effect: Allow
      Action: 's3:*'
      Resource:
        - arn:aws:s3:::import-service-files/*
    - Effect: Allow
      Action:
        - sqs:*
      Resource: arn:aws:sqs:${self:provider.region}:${self:provider.environment.ACCOUNT_ID}:catalogItemsQueue

package:
  individually: true

functions:
  importProductsFile:
    handler: src/functions/index.importProductsFile
    events:
      - http:
          path: /import
          method: get
          cors: true
  importFileParser:
    handler: src/functions/index.importFileParser
    events:
      - s3:
          bucket: import-service-files
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded
          existing: true
plugins:
  - serverless-esbuild
  - serverless-offline-sqs
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude: ["aws-sdk"]
    target: "node16"
    platform: node
    concurrency: 10
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: '2012-11-05'
    endpoint: http://localhost:9324
    region: ${self:provider.region}
    accessKeyId: local
    secretAccessKey: local
    skipCacheInvalidation: false

  serverless_offline:
    allowCache: true
    noTimeout: true
    httpPort: 3000
    lambdaPort: 3002
